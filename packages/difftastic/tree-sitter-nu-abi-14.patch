diff --git a/vendored_parsers/tree-sitter-nu/src/node-types.json b/vendored_parsers/tree-sitter-nu/src/node-types.json
index 7c0e0b6f..df196610 100644
--- a/vendored_parsers/tree-sitter-nu/src/node-types.json
+++ b/vendored_parsers/tree-sitter-nu/src/node-types.json
@@ -594,6 +594,7 @@
   {
     "type": "comment",
     "named": true,
+    "extra": true,
     "fields": {}
   },
   {
diff --git a/vendored_parsers/tree-sitter-nu/src/parser.c b/vendored_parsers/tree-sitter-nu/src/parser.c
index 2217f345..87f10e40 100644
--- a/vendored_parsers/tree-sitter-nu/src/parser.c
+++ b/vendored_parsers/tree-sitter-nu/src/parser.c
@@ -1,4 +1,4 @@
-/* Automatically @generated by tree-sitter v0.25.4 */
+/* Automatically @generated by tree-sitter v0.25.8 */
 
 #include "tree_sitter/parser.h"
 
@@ -14,7 +14,7 @@
 #pragma GCC optimize ("O0")
 #endif
 
-#define LANGUAGE_VERSION 15
+#define LANGUAGE_VERSION 14
 #define STATE_COUNT 7053
 #define LARGE_STATE_COUNT 1450
 #define SYMBOL_COUNT 511
@@ -48534,7 +48534,7 @@ static bool ts_lex_keywords(TSLexer *lexer, TSStateId state) {
   }
 }
 
-static const TSLexerMode ts_lex_modes[STATE_COUNT] = {
+static const TSLexMode ts_lex_modes[STATE_COUNT] = {
   [0] = {.lex_state = 0, .external_lex_state = 1},
   [1] = {.lex_state = 835, .external_lex_state = 2},
   [2] = {.lex_state = 37, .external_lex_state = 2},
@@ -372099,7 +372099,6 @@ TS_PUBLIC const TSLanguage *tree_sitter_nu(void) {
     .state_count = STATE_COUNT,
     .large_state_count = LARGE_STATE_COUNT,
     .production_id_count = PRODUCTION_ID_COUNT,
-    .supertype_count = SUPERTYPE_COUNT,
     .field_count = FIELD_COUNT,
     .max_alias_sequence_length = MAX_ALIAS_SEQUENCE_LENGTH,
     .parse_table = &ts_parse_table[0][0],
@@ -372128,13 +372127,6 @@ TS_PUBLIC const TSLanguage *tree_sitter_nu(void) {
       tree_sitter_nu_external_scanner_deserialize,
     },
     .primary_state_ids = ts_primary_state_ids,
-    .name = "nu",
-    .max_reserved_word_set_size = 0,
-    .metadata = {
-      .major_version = 0,
-      .minor_version = 0,
-      .patch_version = 1,
-    },
   };
   return &language;
 }
